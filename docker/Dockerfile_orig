FROM vertx/vertx3
#FROM vertx/vertx3-exec


ENV USER_UID=<uid>
ENV VIPS_WARNING=1

RUN  useradd -r -u $USER_UID importer


ENV PATH $PATH:$JRUBY_HOME/bin

#RUN echo "ipv6" >> /etc/modules


RUN apt-get update \
    && apt-get install -y python-dateutil git curl vim maven libc6-dev --no-install-recommends \
        imagemagick \
        ghostscript \
        pdftk


# Build libvips
ENV LIBVIPS_VERSION_MAJOR 8
ENV LIBVIPS_VERSION_MINOR 5
ENV LIBVIPS_VERSION_PATCH 9
ENV LIBVIPS_VERSION $LIBVIPS_VERSION_MAJOR.$LIBVIPS_VERSION_MINOR.$LIBVIPS_VERSION_PATCH

RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    autoconf \
    automake \
    build-essential \
    cpp \
    curl \
    g++ \
    gcc \
    git \
    fftw3-dev \
    gobject-introspection \
    gtk-doc-tools \
    imagemagick \
    libc6-dev \
    libexif-dev \
    libgif-dev \
    libglib2.0-dev \
    libgsf-1-dev \
    libmagickwand-dev \
    libmatio-dev \
    libopenslide-dev \
    liborc-0.4-dev \
    libpango1.0-dev \
    libpoppler-glib-dev \
    librsvg2-dev \
    libtiff5-dev \
    libwebp-dev \
    libxml2-dev \
    make \
    man-db \
    pkg-config \
    swig \
 && cd /tmp \
 && curl -LJO https://github.com/jcupitt/libvips/releases/download/v${LIBVIPS_VERSION}/vips-${LIBVIPS_VERSION}.tar.gz \
 && tar zvxf vips-${LIBVIPS_VERSION}.tar.gz \
 && cd /tmp/vips-${LIBVIPS_VERSION}  \
 && ./configure --enable-debug=no --without-python $1 \
 && make \
 && make install \
 && ldconfig \
 && apt-get remove -y automake build-essential \
 && apt-get autoremove -y \
 && apt-get autoclean \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

    #libpng12-dev \
    #libjpeg-turbo8-dev \
    #libcfitsio3-dev \


ENV JRUBY_HOME  /opt/jruby
#ENV GEM_PATH    /opt/jruby
#ENV GEM_HOME    /opt/jruby

#ENV JRUBY_VERSION 9.1.10.0
#ENV JRUBY_SHA256 93ec6b55fa0d5b37e9f8131f76adc01efa82bebcef8df3e0de49e83dad3ee958

# lib conflict
# ttfunk-1.6.1 requires ruby version ~> 2.4, which is incompatible with the current version, ruby 2.3.3p0 (jruby 9.1.10.0)
#ENV JRUBY_VERSION 9.2.9.0
#ENV JRUBY_SHA256 ced3fbb81b4f29f6a7fe7207e678e4154d95cc94de9f509fcaaf05768a6bf911

#ENV JRUBY_VERSION 9.2.6.0
#ENV JRUBY_SHA256 70a1ff0e17a98baa63ea92c91fd38ff1e55a2056e5d57ba0409c4543d29e0e3d

#ENV JRUBY_VERSION 9.2.1.0
#ENV JRUBY_SHA256 8c987378b144eff0dcc553312f1853c05ee9135f3ffdac7b0828b7ad62f32835

# lib conflict:
# (TypeError) no implicit conversion of Java::OrgJruby::Ruby into String
ENV JRUBY_VERSION 9.1.13.0
ENV JRUBY_SHA256 9d156646623ac2f27174721035b52572a4b05690db7c1293295aa2c04aad3908

RUN mkdir /opt/jruby \
  && curl -fSL https://s3.amazonaws.com/jruby.org/downloads/${JRUBY_VERSION}/jruby-bin-${JRUBY_VERSION}.tar.gz -o /tmp/jruby.tar.gz \
  && echo "$JRUBY_SHA256 /tmp/jruby.tar.gz" | sha256sum -c - \
  && tar -zx --strip-components=1 -f /tmp/jruby.tar.gz -C /opt/jruby \
  && rm /tmp/jruby.tar.gz \
  && update-alternatives --install /usr/local/bin/ruby ruby /opt/jruby/bin/jruby 1
ENV PATH /opt/jruby/bin:$PATH


# skip installing gem documentation
RUN mkdir -p /opt/jruby/etc \
	&& { \
		echo 'install: --no-document'; \
		echo 'update: --no-document'; \
	} >> /opt/jruby/etc/gemrc




WORKDIR /

RUN mkdir -p <verticle_home>
COPY Gemfile <verticle_home>/Gemfile
#COPY Gemfile.lock <verticle_home>/Gemfile.lock
#COPY pom.xml <verticle_home>/pom.xml

WORKDIR <verticle_home>

#RUN mvn install


RUN jruby -S gem install bundler  -v '1.17.3'
# RUN gem update --system
# RUN bundle update --bundler
RUN jruby -S bundle install
# RUN jruby -S gem list

#RUN jruby -S gem install bundler  \
#  && jruby -S bundle install  -V  \
#  && jruby -S gem list

#RUN jruby -S gem install bundler -i $GEM_PATH \
#  && jruby -S bundle install --path=$GEM_PATH  \
#  && jruby -S gem list

 # && jruby -S gem install bundler \
 # && jruby -S bundle update --bundler \
 # && jruby -S bundle install \

#RUN cat Gemfile
#RUN cat Gemfile.lock

# RUN jruby -e 'JRuby::Util.methods.each {|m| puts m}'
# RUN gem env
# RUN jruby -e 'ENV.each_pair {|k,v| puts "#{k} -> #{v}"}'


RUN chown -R importer <verticle_home>

USER importer

RUN rm -rf /var/lib/apt/lists/*

WORKDIR <verticle_home>
ENTRYPOINT ["sh", "-c"]


